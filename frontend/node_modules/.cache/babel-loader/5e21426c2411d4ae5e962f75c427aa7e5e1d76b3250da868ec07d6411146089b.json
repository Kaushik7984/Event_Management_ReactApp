{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactWithMAX\\\\SPA\\\\frontend\\\\src\\\\Pages\\\\EventDetail.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Link, json, useLoaderData, useParams } from \"react-router-dom\";\nimport EventItem from '../components/EventItem';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventDetailPage() {\n  _s();\n  const data = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventItem, {\n      event: data.event\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(EventDetailPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nexport async function loader({\n  request,\n  params\n}) {\n  const id = params.eventId;\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch detailes for selected events.'\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["React","Link","json","useLoaderData","useParams","EventItem","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","data","children","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","request","params","id","eventId","response","fetch","ok","message","status","$RefreshReg$"],"sources":["D:/ReactWithMAX/SPA/frontend/src/Pages/EventDetail.js"],"sourcesContent":["import React from \"react\";\r\nimport { Link, json, useLoaderData, useParams } from \"react-router-dom\";\r\nimport EventItem from '../components/EventItem'\r\n\r\nfunction EventDetailPage() {\r\n const data = useLoaderData();\r\n\r\n  return (\r\n    <>\r\n      <EventItem  event={data.event}/>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EventDetailPage;\r\n\r\nexport async function loader ({request, params}) {\r\n  const id = params.eventId;\r\n  const response = await fetch(\"http://localhost:8080/events/\" + id)\r\n\r\n  if(!response.ok){\r\n    throw json({message: 'Could not fetch detailes for selected events.'},{status:500})\r\n  } else {\r\n    return response;\r\n  }\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,IAAI,EAAEC,aAAa,EAAEC,SAAS,QAAQ,kBAAkB;AACvE,OAAOC,SAAS,MAAM,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE/C,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAMC,IAAI,GAAGT,aAAa,CAAC,CAAC;EAE3B,oBACEI,OAAA,CAAAE,SAAA;IAAAI,QAAA,eACEN,OAAA,CAACF,SAAS;MAAES,KAAK,EAAEF,IAAI,CAACE;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC,gBAChC,CAAC;AAEP;AAACP,EAAA,CARQD,eAAe;EAAA,QACVP,aAAa;AAAA;AAAAgB,EAAA,GADlBT,eAAe;AAUxB,eAAeA,eAAe;AAE9B,OAAO,eAAeU,MAAMA,CAAE;EAACC,OAAO;EAAEC;AAAM,CAAC,EAAE;EAC/C,MAAMC,EAAE,GAAGD,MAAM,CAACE,OAAO;EACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGH,EAAE,CAAC;EAElE,IAAG,CAACE,QAAQ,CAACE,EAAE,EAAC;IACd,MAAMzB,IAAI,CAAC;MAAC0B,OAAO,EAAE;IAA+C,CAAC,EAAC;MAACC,MAAM,EAAC;IAAG,CAAC,CAAC;EACrF,CAAC,MAAM;IACL,OAAOJ,QAAQ;EACjB;AACF;AAAC,IAAAN,EAAA;AAAAW,YAAA,CAAAX,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}