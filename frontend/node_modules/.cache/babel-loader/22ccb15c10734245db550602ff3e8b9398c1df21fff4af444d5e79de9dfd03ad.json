{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactWithMAX\\\\SPA\\\\frontend\\\\src\\\\Pages\\\\Event.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData } from \"react-router-dom\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const events = useLoaderData();\n  if (DataTransfer.isError) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(EventsList, {\n    events: events\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 10\n  }, this);\n}\n_s(EventsPage, \"0qsQ0LJMbp4ZAcOenpedLepO/y4=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nexport async function loader() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    return {\n      isError: true,\n      message: 'Could not fetch events.'\n    };\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","EventsList","jsxDEV","_jsxDEV","EventsPage","_s","events","DataTransfer","isError","children","data","message","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","response","fetch","ok","resData","json","$RefreshReg$"],"sources":["D:/ReactWithMAX/SPA/frontend/src/Pages/Event.js"],"sourcesContent":["import { useLoaderData } from \"react-router-dom\";\r\nimport EventsList from \"../components/EventsList\";\r\n\r\nfunction EventsPage() {\r\n  const events = useLoaderData();\r\n\r\n  if(DataTransfer.isError){\r\n    return <p>{data.message}</p>\r\n  }\r\n\r\n  return <EventsList events={events} />;\r\n}\r\n\r\nexport default EventsPage;\r\n\r\nexport async function loader () {\r\n  const response = await fetch(\"http://localhost:8080/events\");\r\n\r\n  if (!response.ok) {\r\n    return {isError: true , message: 'Could not fetch events.'}\r\n  } else {\r\n    const resData = await response.json();\r\n    return resData.events;\r\n  }\r\n}"],"mappings":";;AAAA,SAASA,aAAa,QAAQ,kBAAkB;AAChD,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,MAAM,GAAGN,aAAa,CAAC,CAAC;EAE9B,IAAGO,YAAY,CAACC,OAAO,EAAC;IACtB,oBAAOL,OAAA;MAAAM,QAAA,EAAIC,IAAI,CAACC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAC9B;EAEA,oBAAOZ,OAAA,CAACF,UAAU;IAACK,MAAM,EAAEA;EAAO;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACvC;AAACV,EAAA,CARQD,UAAU;EAAA,QACFJ,aAAa;AAAA;AAAAgB,EAAA,GADrBZ,UAAU;AAUnB,eAAeA,UAAU;AAEzB,OAAO,eAAea,MAAMA,CAAA,EAAI;EAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB,OAAO;MAACZ,OAAO,EAAE,IAAI;MAAGG,OAAO,EAAE;IAAyB,CAAC;EAC7D,CAAC,MAAM;IACL,MAAMU,OAAO,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;IACrC,OAAOD,OAAO,CAACf,MAAM;EACvB;AACF;AAAC,IAAAU,EAAA;AAAAO,YAAA,CAAAP,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}